name: Upload Release package to TestPyPI
#on:
#  pull_request:
#    types: [opened, reopened]
on:
  push:
    branches-ignore:
      - master

#jobs:
#  build:
#    name: Build wheels on ${{ matrix.platform }}
#    runs-on: ${{ matrix.platform }}
#    strategy:
#      matrix:
#        platform: [ macos-14 ]
#    env:
#      DEPLOY_BUILD_PYTHON_VERSION: "3.11"
#      MACOSX_DEPLOYMENT_TARGET: "14.0"
#      CIBW_BUILD: "cp311-*"
#    defaults:
#      run:
#        shell: bash
#    steps:
#      - uses: conda-incubator/setup-miniconda@v3
#      - name: Checkout PyReindexer repo
#        uses: actions/checkout@v4
#      - name: Set up Python ${{ env.DEPLOY_BUILD_PYTHON_VERSION }}
#        uses: actions/setup-python@v5
#        with:
#          python-version: ${{ env.DEPLOY_BUILD_PYTHON_VERSION }}
#      - name: Install Python dependencies
#        run: python -m pip install --upgrade pip build cibuildwheel
#      - name: Build PyReindexer wheels
#        run: python -m cibuildwheel --output-dir wheels
##      - name: Build PyReindexer dist
##        run: python -m build
#      - name: Install PyReindexer
#        run: |
#          python -m pip install --upgrade --disable-pip-version-check pip importlib_metadata
#          python -m pip install wheels/*whl --no-deps pyreindexer
#      - name: Prepare Test Environment
#        run: python -m pip install -r requirements.txt
#      - name: Store all build artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: rx_artifacts
#          path: |
#            dist/*
#            wheels/*whl
#      - name: Test builtin
#        run: |
#          cd $(python -c "import sysconfig; print(sysconfig.get_path('purelib'))")/pyreindexer
#          $GITHUB_WORKSPACE/.github/workflows/test.sh builtin

jobs:
  build:
    name: Build wheels on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ macos-14 ]
    env:
      DEPLOY_BUILD_PYTHON_VERSION: "3.11"
      MACOSX_DEPLOYMENT_TARGET: "14.0"
      CIBW_BUILD: "cp311-*" # build wheel for python 3.8 and 3.13
    defaults:
      run:
        shell: bash
    steps:
      - uses: conda-incubator/setup-miniconda@v3
      - name: Checkout PyReindexer repo
        uses: actions/checkout@v4
      - name: Set up Python ${{ env.DEPLOY_BUILD_PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.DEPLOY_BUILD_PYTHON_VERSION }}
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip build cibuildwheel
      - name: Build PyReindexer wheels
        run: python -m cibuildwheel --output-dir dist
      - name: Build PyReindexer dist
        run: python -m build --sdist
      - name: Store all build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rx_artifacts
          path: dist/*

  deploy:
    name: Upload to TestPyPI (ubuntu)
    runs-on: ubuntu-22.04
    needs: build
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyreindexer/
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: rx_artifacts
          path: dist/
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          # user: __token__ ## used as default
          password: pypi-${{ secrets.TESTPYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          attestations: false

  test_dist:
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-14 ]
        python: [ "3.11" ] # versions of python with missing wheel and presented wheel
    runs-on: ${{ matrix.platform }}
    needs: deploy
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout PyReindexer
        uses: actions/checkout@v4
      - name: Install Reindexer (MacOS)
        run: |
          brew tap restream/reindexer
          brew install reindexer
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
        with:
          python-version: ${{ matrix.python }}
      - name: Install PyReindexer
        run: |
          python -m pip install --upgrade --disable-pip-version-check pip importlib_metadata setuptools wheel
          if [[ ${{matrix.python}} == "3.12" ]]; then
            python -m pip install -vvv --no-deps --no-build-isolation --index-url https://test.pypi.org/simple/ pyreindexer
          else
            # presented wheel needs `no-binary` for the forced sdist install
            python -m pip install -vvv --no-deps --no-build-isolation --no-binary pyreindexer --index-url https://test.pypi.org/simple/ pyreindexer
          fi
      - name: Prepare Test Environment
        run: python -m pip install -r requirements.txt
      - name: Test
        run: |
          cd $(python -c "import sysconfig; print(sysconfig.get_path('purelib'))")/pyreindexer
          $GITHUB_WORKSPACE/.github/workflows/test.sh

  test_wheel:
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-14 ]
        python: [ "3.11" ] # both versions of python with the wheel presented
        rxmode: [ builtin, cproto ]
    runs-on: ${{ matrix.platform }}
    needs: deploy
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout PyReindexer
        uses: actions/checkout@v4
      - name: Install Reindexer (MacOS)
        if: matrix.rxmode == 'cproto'
        run: |
          brew tap restream/reindexer
          brew install reindexer
      - name: Install Libomp (MacOS)
        if: matrix.rxmode == 'builtin'
        run: brew install libomp
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: 1
        with:
          python-version: ${{ matrix.python }}
      - name: Install PyReindexer
        run: |
          python -m pip install --upgrade --disable-pip-version-check pip importlib_metadata
          python -m pip install -vvv --index-url https://test.pypi.org/simple/ --no-deps pyreindexer
      - name: Prepare Test Environment
        run: python -m pip install -r requirements.txt
      - name: Test ${{ matrix.rxmode }}
        run: |
          cd $(python -c "import sysconfig; print(sysconfig.get_path('purelib'))")/pyreindexer
          $GITHUB_WORKSPACE/.github/workflows/test.sh ${{matrix.rxmode}}